---

Parameters:

  BranchName:
    Type: String
    Default: main

  GitHubRepositoryPath:
    Type: String
    Default: tdmalone/codepipeline-samples

  Namespace:
    Type: String
    Default: tim-codepipeline-samples

  ThisTemplateFilename:
    Type: String
    Default: codepipeline-samples.yaml

Resources:

  # Source actions:
  # - CodeStar Connections/GitHub
  # - S3
  #
  # Build actions:
  # - CodeBuild
  #
  # Deploy actions:
  # - CloudFormation
  # - cross-region CloudFormation
  # - cross-account CloudFormation
  # - CodeDeploy
  # - S3
  # - ECS
  #
  # Invoke actions:
  # - Lambda
  # - Step Functions
  #
  # Approve actions:
  # - Manual approval

  #######################
  # Pipelines
  #######################

  MetaPipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: WaitForIAMResources
    Properties:
      Name: !Sub ${Namespace}-meta-pipeline
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn

      ArtifactStores:
        - Region: !Ref AWS::Region
          ArtifactStore:
            Type: S3
            Location: !Ref ArtifactsBucket

      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              Configuration:
                ConnectionArn: !Ref CodeStarConnection
                DetectChanges: true
                FullRepositoryId: !Ref GitHubRepositoryPath
                BranchName: !Ref BranchName
              OutputArtifacts:
                - Name: SourceOutput

        - Name: DeployStacks
          Actions:
            - Name: DeployMetaPipeline
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                StackName: !Sub ${Namespace}-meta-pipeline
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                TemplatePath: !Ref ThisTemplateFilename

  # GoodPipeline:
  #   Type: AWS::CodePipeline::Pipeline
  #   Properties:
  #     Stages:
  #       - Actions:
  #           - ActionTypeId:
  #               Owner:
  #               Category:
  #               Version:
  #               Provider:
  #             Name:
  #         Name:
  #     RoleArn: !GetAtt CodePipelineRole.Arn

  # BadPipeline:
  #   Type: AWS::CodePipeline::Pipeline
  #   Properties:
  #     Stages:
  #       - Actions:
  #           - ActionTypeId:
  #               Owner:
  #               Category:
  #               Version:
  #               Provider:
  #             Name:
  #         Name:
  #     RoleArn: !GetAtt CodePipelineRole.Arn

  # WaitingPipeline:
  #   Type: AWS::CodePipeline::Pipeline
  #   Properties:
  #     Stages:
  #       - Actions:
  #           - ActionTypeId:
  #               Owner:
  #               Category:
  #               Version:
  #               Provider:
  #             Name:
  #         Name:
  #     RoleArn: !GetAtt CodePipelineRole.Arn

  # AssortedPipeline1:
  #   Type: AWS::CodePipeline::Pipeline
  #   Properties:
  #     Stages:
  #       - Actions:
  #           - ActionTypeId:
  #               Owner:
  #               Category:
  #               Version:
  #               Provider:
  #             Name:
  #         Name:
  #     RoleArn: !GetAtt CodePipelineRole.Arn

  # AssortedPipeline2:
  #   Type: AWS::CodePipeline::Pipeline
  #   Properties:
  #     Stages:
  #       - Actions:
  #           - ActionTypeId:
  #               Owner:
  #               Category:
  #               Version:
  #               Provider:
  #             Name:
  #         Name:
  #     RoleArn: !GetAtt CodePipelineRole.Arn

  #######################
  # Supporting resources
  #######################

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      LifecycleConfiguration:
        Rules:
          - Id: MainRule
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 30
            NoncurrentVersionExpiration:
              NoncurrentDays: 30
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  # CodeBuildProject:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Source:
  #       Type:
  #     ServiceRole: !GetAtt CodeBuildRole.Arn
  #     Artifacts:
  #       Type:
  #     Environment:
  #       Type:
  #       Image:
  #       ComputeType:

  # CodeDeployApplication:
  #   Type: AWS::CodeDeploy::Application
  #   Properties:

  CodeStarConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: !Sub ${Namespace}-github-connection
      ProviderType: GitHub

  # LambdaFunction:
  #   Type: AWS::Lambda::Function
  #   Properties:
  #     Code:

  #     Role: !GetAtt LambdaFunctionRole.Arn

  # StateMachine:
  #   Type: AWS::StepFunctions::StateMachine
  #   Properties:
  #     RoleArn: !GetAtt StateMachineRole.Arn

  #######################
  # IAM roles
  #######################

  WaitForIAMResources:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn:
      - CodePipelineRole
      - CloudFormationRole
    Properties:
      Handle: !Ref WaitForIAMResourcesHandle
      Count: 0
      Timeout: 30

  WaitForIAMResourcesHandle:
    Type: AWS::CloudFormation::WaitConditionHandle

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Namespace}-CloudFormationRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:

              - Effect: Allow
                Action:
                  - codepipeline:DeletePipeline
                  - codepipeline:GetPipeline*
                  - codepipeline:StartPipelineExecution
                  - codepipeline:UpdatePipeline
                  - codestar-connections:CreateConnection
                  - codestar-connections:GetConnection
                  - codestar-connections:ListTagsForResource
                  - codestar-connections:PassConnection
                  - iam:AttachRolePolicy
                  - iam:CreatePolicy*
                  - iam:CreateRole*
                  - iam:DeletePolicy*
                  - iam:DeleteRole*
                  - iam:DetachRolePolicy
                  - iam:GetPolicy*
                  - iam:GetRole*
                  - iam:List*
                  - iam:PutRole*
                  - iam:SetDefaultPolicyVersion
                  - iam:UpdateAssumeRolePolicy
                  - iam:UpdateRole
                  - iam:UpdateRoleDescription
                  - s3:CreateBucket
                  - s3:DeleteBucket*
                  - s3:GetLifecycleConfiguration
                  - s3:PutBucket*
                  - s3:PutLifecycleConfiguration
                Resource: '*'

              - Effect: Allow
                Action: iam:PassRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${Namespace}-CloudFormationDeploymentRole
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${Namespace}-CodePipelineRole

  # CodeBuildRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Namespace}-CodePipelineRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:

              - Effect: Allow
                Action: s3:GetObject
                Resource: !Sub ${ArtifactsBucket.Arn}/*

              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                Resource: '*'

              - Effect: Allow
                Action: iam:PassRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${Namespace}-CloudFormationDeploymentRole
                Condition:
                  StringEquals:
                    iam:PassedToService: cloudformation.amazonaws.com

  # LambdaFunctionRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:

  # StateMachineRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:
